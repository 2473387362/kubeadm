---
- name: computes etcd release url and cluster endpoints
  set_fact:
    etcd_release_url: "https://github.com/coreos/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
    etcd_cluster_endpoints: "{% for host in groups['etcds']|sort %}{{hostvars[host]['inventory_hostname']}}=http://{{hostvars[host]['node_ip']}}:2380{% if not loop.last %},{% endif %}{% endfor %}"

- name: determine whether etcd needs to be run
  stat:
    path: /usr/local/bin/etcdctl
  register: etcdctl_command

- name: download and extract etcd binaries
  unarchive:
    remote_src: True
    src: "{{ etcd_release_url }}"
    dest: /tmp
    creates: /usr/local/bin/etcd
  when: etcdctl_command.stat.exists == False

- name: move binaries into path
  copy:
    remote_src: True
    src: "/tmp/etcd-{{ etcd_version }}-linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
  with_items:
    - etcd
    - etcdctl
  when: etcdctl_command.stat.exists == False

- name: set permissions on etcd binaries
  file:
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    state: file
  with_items:
    - etcd
    - etcdctl

- name: create data directory
  file:
    dest: /var/lib/etcd
    state: directory

- name: etcd systemd template
  template:
    src: etc/systemd/system/etcd.service
    dest: /etc/systemd/system/etcd.service
  notify:
    - restart etcd

- name: enable and start the service
  systemd:
    name: etcd
    daemon_reload: True
    state: started
    enabled: True
